{"version":3,"sources":["config.js","Components/Navigation.js","Components/NotFound.js","Components/PhotoGallery.js","Components/SearchForm.js","App.js","reportWebVitals.js","index.js"],"names":["apiKey","Navigation","className","to","NotFound","PhotoGallery","props","photoTopic","topic","match","params","searchTerm","photoData","retrievePhotoData","length","SearchBar","handleSubmit","e","preventDefault","value","path","onSearch","history","push","currentTarget","reset","onSubmit","this","type","name","placeholder","ref","input","required","fill","height","viewBox","width","xmlns","d","Component","withRouter","App","state","isLoading","defaultTopic","retrievedPhotoData","currentTopic","getFlickrResults","axios","get","then","response","data","photos","photo","reduce","photoLink","server","id","secret","src","alt","returnedPhotoData","setState","prevState","catch","err","console","log","SearchForm","exact","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52cb9155.chunk.js","sourcesContent":["const apiKey = 'f007f13d289ea908d9a51c8cd4f89376';\r\nexport default apiKey;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <header>\r\n      <nav className='main-nav'>\r\n        <ul>\r\n          <li><NavLink to='/cats'>Cats</NavLink></li>\r\n          <li><NavLink to='/dogs'>Dogs</NavLink></li>\r\n          <li><NavLink to='/beaches'>Beaches</NavLink></li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\nexport default Navigation;","import React from 'react';\r\n\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <li className='not-found'>\r\n      <h3>Sorry could not find any pictures.</h3>\r\n      <h3>Bummer no pictures could be found :(</h3>\r\n\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport NotFound from './NotFound';\r\n\r\nconst PhotoGallery= (props) => {\r\n  const photoTopic = props.topic || props.match.params.searchTerm;\r\n\r\n  const photoData = props.retrievePhotoData(photoTopic);\r\n\r\n  // show loading when data is being retrived\r\n  if (!photoData) {\r\n    return (\r\n      <h4>Loading....</h4>\r\n    );\r\n  // if at least 1 photo returned display it\r\n  } else if (photoData.length > 0) {\r\n    return (\r\n      <div className='container'>\r\n      <div className='photo-container'>\r\n        <h3>{`Found some pictures of ${photoTopic}`}</h3>\r\n        <h4>Click a photo category above, or search for something!</h4>\r\n        <ul>\r\n          {photoData}\r\n        </ul>\r\n      </div>\r\n      </div>\r\n    );\r\n  // no results to display\r\n  } else {\r\n    return (\r\n      <NotFound />\r\n    );\r\n  }\r\n};\r\n\r\nexport default PhotoGallery;","  \r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass SearchBar extends Component {\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const searchTerm = this.searchTerm.value;\r\n    const path = `/search/${searchTerm}`;\r\n    this.props.onSearch(searchTerm);\r\n    this.props.history.push(path);\r\n    e.currentTarget.reset();\r\n  }\r\n\r\n  render () {\r\n    return (\r\n    \r\n      <form className='search-form' onSubmit={this.handleSubmit}>\r\n        <input\r\n          type='search'\r\n          name='search'\r\n          placeholder='Search'\r\n          ref={ (input) => this.searchTerm = input }\r\n          required\r\n        />\r\n        <button type='submit' className='search-button'>\r\n          <svg fill='#fff' height='24' viewBox='0 0 23 23' width='24' xmlns='http://www.w3.org/2000/svg'>\r\n            <path d='M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z' />\r\n            <path d='M0 0h24v24H0z' fill='none' />\r\n          </svg>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SearchBar);\r\n","  \nimport './index.css';\nimport React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport axios from 'axios';\n\nimport apiKey from './config';\n\nimport Header from './Components/Navigation';\nimport PhotoGallery from './Components/PhotoGallery';\nimport NotFound from './Components/NotFound';\nimport SearchForm from './Components/SearchForm';\n\nclass App extends Component {\n\n  state = {\n    isLoading: true,\n    defaultTopic: 'surfing',\n    retrievedPhotoData: {},\n    currentTopic: null\n  }\n\n  getFlickrResults = (searchTerm=this.state.defaultTopic) => {\n    // call the flickr api \n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${searchTerm}&safe_search=1&format=json&nojsoncallback=1&per_page=24`)\n      .then( response => {\n     \n        const returnedPhotoData = response.data.photos.photo.reduce((data, photo) => {\n          const photoLink = `https://live.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}_b.jpg`\n          data.push(<li key={photo.id}><img src={photoLink} alt=\"featured pic\"/></li>);\n          return data;\n        }, []);\n        return returnedPhotoData;\n      })\n      // push the created elements into state \n      // to be retrieved later by the photo container \n      .then(returnedPhotoData => {\n        this.setState(prevState => { \n          let retrievedPhotoData = prevState.retrievedPhotoData;\n          retrievedPhotoData[searchTerm] = returnedPhotoData;\n          return { retrievedPhotoData: retrievedPhotoData, currentTopic: searchTerm, isLoading: false };\n        });\n      })\n      .catch( err => console.log(err));\n  }\n\n  componentDidMount() {\n    this.getFlickrResults();\n    this.getFlickrResults('cats');\n    this.getFlickrResults('dogs');\n    this.getFlickrResults('beaches');\n  }\n\n\n  retrievePhotoData = (topic) => {\n\n    if(!this.state.retrievedPhotoData[topic]){\n      this.getFlickrResults(topic);\n    }\n    return this.state.retrievedPhotoData[topic];\n  }\n\n  render () {\n    return (\n      <HashRouter>\n        <SearchForm onSearch={this.retrievePhotoData} />\n        <Header />\n        <Switch>\n          <Route exact path='/treehouse_project_7_React_gallery_app' render={() => <PhotoGallery retrievePhotoData={this.retrievePhotoData} topic={this.state.defaultTopic} />} />\n          <Route path='/search/:searchTerm' render={ ({match}) => <PhotoGallery retrievePhotoData={this.retrievePhotoData} match={match} />} />\n          <Route exact path='/cats' render={() => <PhotoGallery retrievePhotoData={this.retrievePhotoData} topic='cats' />} />\n          <Route exact path='/dogs' render={() => <PhotoGallery retrievePhotoData={this.retrievePhotoData} topic='dogs' />} />\n          <Route exact path='/beaches' render={() => <PhotoGallery retrievePhotoData={this.retrievePhotoData} topic='beaches' />} />\n          <Route component={NotFound} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}